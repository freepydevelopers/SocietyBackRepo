# Generated by Django 2.1.7 on 2020-07-04 19:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqId', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('addr1', models.CharField(max_length=100)),
                ('addr2', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=6)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='BillSetup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('amount', models.IntegerField()),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_billsetup', to=settings.AUTH_USER_MODEL)),
                ('updatedby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_billsetup', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqId', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('constructionstatus', models.CharField(choices=[('PRO', 'Proposed'), ('COM', 'Complete'), ('UCO', 'Under Construction'), ('DES', 'Destroyed')], default='COM', max_length=3)),
                ('constructionstatusyear', models.IntegerField()),
                ('imagepath', models.CharField(max_length=100)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_building', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'building',
            },
        ),
        migrations.CreateModel(
            name='CCTV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqId', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('status', models.CharField(default='running', max_length=30)),
                ('building', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.Building')),
            ],
            options={
                'db_table': 'cctv',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqId', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_city', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'city',
                'verbose_name_plural': 'cities',
                'db_table': 'city',
            },
        ),
        migrations.CreateModel(
            name='Complain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqId', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('title', models.CharField(max_length=25)),
                ('description', models.TextField(null=True)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_complain', to=settings.AUTH_USER_MODEL)),
                ('updatedby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_complain', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Doc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('extension', models.CharField(max_length=10)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'verbose_name': 'doc',
                'verbose_name_plural': 'docs',
                'db_table': 'doc',
            },
        ),
        migrations.CreateModel(
            name='Elevator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqId', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('status', models.CharField(default='running', max_length=30)),
                ('building', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.Building')),
            ],
            options={
                'db_table': 'elevator',
            },
        ),
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqId', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=25)),
                ('flatnumber', models.IntegerField()),
                ('extensionnumber', models.CharField(max_length=10)),
                ('description', models.TextField(null=True)),
                ('possesion', models.DateField(null=True)),
                ('status', models.CharField(choices=[('empt', 'Empty'), ('iso', 'Is Owner'), ('ist', 'Is Tenant')], default='iso', max_length=3)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_flat', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'flat',
            },
        ),
        migrations.CreateModel(
            name='FlatOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('act', 'Active'), ('ina', 'Inactive')], default='act', max_length=3)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_flatowner', to=settings.AUTH_USER_MODEL)),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Flat')),
            ],
            options={
                'db_table': 'flatowner',
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Building')),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_floor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'floor',
            },
        ),
        migrations.CreateModel(
            name='FloorEnum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('floornumber', models.IntegerField()),
            ],
            options={
                'verbose_name': 'floordetail',
                'verbose_name_plural': 'floordetails',
                'db_table': 'floordetail',
            },
        ),
        migrations.CreateModel(
            name='FloorPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_floorplan', to=settings.AUTH_USER_MODEL)),
                ('imagepath', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Doc')),
            ],
            options={
                'db_table': 'floorplan',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'group',
            },
        ),
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('months', models.IntegerField()),
                ('rentpermonth', models.IntegerField()),
                ('deposit', models.IntegerField()),
                ('frommonth', models.IntegerField()),
                ('fromyear', models.IntegerField()),
                ('status', models.CharField(choices=[('act', 'Active'), ('ina', 'Inactive')], default='act', max_length=3)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_lease', to=settings.AUTH_USER_MODEL)),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Flat')),
            ],
            options={
                'db_table': 'lease',
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('durationinmonths', models.IntegerField()),
                ('frommonth', models.DateTimeField(null=True)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_maintenance', to=settings.AUTH_USER_MODEL)),
                ('updatedby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_maintenance', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqId', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('title', models.CharField(max_length=25)),
                ('description', models.TextField(null=True)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_meeting', to=settings.AUTH_USER_MODEL)),
                ('updatedby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_meeting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MemberGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField()),
                ('invite_reason', models.CharField(max_length=64)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.MemberGroup')),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqId', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('title', models.CharField(max_length=25)),
                ('description', models.TextField(null=True)),
                ('noticedate', models.DateTimeField(null=True)),
                ('status', models.CharField(default='active', max_length=10)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_notice', to=settings.AUTH_USER_MODEL)),
                ('updatedby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_notice', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqId', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('lotnumber', models.CharField(max_length=10)),
                ('description', models.TextField(null=True)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('assignedto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Flat')),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_parking', to=settings.AUTH_USER_MODEL)),
                ('updatedby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_parking', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'parking',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, choices=[('mr', 'Mr'), ('mrs', 'Mrs'), ('ms', 'Ms')], max_length=3)),
                ('educationtitle', models.CharField(blank=True, max_length=50)),
                ('organization', models.CharField(blank=True, max_length=50)),
                ('mobile', models.CharField(blank=True, max_length=12)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('permanentaddress', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.Address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'profile',
                'verbose_name_plural': 'profiles',
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='Society',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqId', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('shortname', models.CharField(max_length=10)),
                ('registrationnumber', models.CharField(max_length=50)),
                ('establishedon', models.DateTimeField(null=True)),
                ('developer', models.CharField(max_length=100)),
                ('imagepath', models.CharField(max_length=100)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Address')),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_society', to=settings.AUTH_USER_MODEL)),
                ('updatedby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_society', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'society',
                'verbose_name_plural': 'societies',
                'db_table': 'society',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'state',
                'verbose_name_plural': 'states',
                'db_table': 'state',
            },
        ),
        migrations.CreateModel(
            name='UnitPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('description', models.TextField(null=True)),
                ('maintenancearea', models.IntegerField()),
                ('carpetarea', models.IntegerField()),
                ('unittype', models.CharField(choices=[('01r', '1 Room Kitchen'), ('01b', '1 BHK'), ('15b', '1.5 BHK'), ('02b', '2 BHK'), ('25b', '2.5 BHK'), ('03b', '3 BHK'), ('04b', '4 BHK'), ('pen', 'Penthouse')], default='01b', max_length=3)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_unitplan', to=settings.AUTH_USER_MODEL)),
                ('floorplan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.FloorPlan')),
                ('imagepath', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Doc')),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Society')),
                ('updatedby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_unitplan', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'unitplan',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('adm', 'Admin'), ('own', 'Owner'), ('ten', 'Tenant'), ('emp', 'Employee')], default='own', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqId', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('number', models.CharField(max_length=15)),
                ('vehicletype', models.CharField(choices=[('TWO', 'Two Wheeler'), ('THR', 'Three Wheeler'), ('FOU', 'Four Wheeler')], default='FOU', max_length=3)),
                ('description', models.TextField(null=True)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('APR', 'Approved'), ('ISD', 'Issued'), ('REJ', 'Rejected')], default='NEW', max_length=3)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('updatedon', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_vehicle', to=settings.AUTH_USER_MODEL)),
                ('parkedat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Parking')),
                ('updatedby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_vehicle', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'vehicle',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='usertype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.UserType'),
        ),
        migrations.AddField(
            model_name='membership',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Profile'),
        ),
        migrations.AddField(
            model_name='membergroup',
            name='members',
            field=models.ManyToManyField(through='Core.Membership', to='Core.Profile'),
        ),
        migrations.AddField(
            model_name='lease',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Profile'),
        ),
        migrations.AddField(
            model_name='lease',
            name='updatedby',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_lease', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='group',
            name='society',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Society'),
        ),
        migrations.AddField(
            model_name='floorplan',
            name='society',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Society'),
        ),
        migrations.AddField(
            model_name='floorplan',
            name='updatedby',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_floorplan', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='floor',
            name='floordetail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.FloorEnum'),
        ),
        migrations.AddField(
            model_name='floor',
            name='floorplan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.FloorPlan'),
        ),
        migrations.AddField(
            model_name='floor',
            name='society',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Society'),
        ),
        migrations.AddField(
            model_name='floor',
            name='updatedby',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_floor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='flatowner',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Profile'),
        ),
        migrations.AddField(
            model_name='flatowner',
            name='updatedby',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_flatowner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='flat',
            name='floor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Floor'),
        ),
        migrations.AddField(
            model_name='flat',
            name='unitplan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.UnitPlan'),
        ),
        migrations.AddField(
            model_name='flat',
            name='updatedby',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_flat', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='doc',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Group'),
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.State'),
        ),
        migrations.AddField(
            model_name='city',
            name='updatedby',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_city', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='building',
            name='society',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.Society'),
        ),
        migrations.AddField(
            model_name='building',
            name='updatedby',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_building', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='address',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.City'),
        ),
        migrations.AddField(
            model_name='address',
            name='createdby',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_address', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='address',
            name='updatedby',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u_address', to=settings.AUTH_USER_MODEL),
        ),
    ]
